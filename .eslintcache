[{"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\index.js":"1","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\App.js":"2","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js":"3","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js":"4","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\routes.js":"5","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js":"6","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js":"7","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js":"8","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js":"9","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js":"10","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js":"11","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js":"12","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js":"13","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\index.js":"14","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\App.js":"15","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js":"16","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js":"17","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\routes.js":"18","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js":"19","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js":"20","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js":"21","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js":"22","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js":"23","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js":"24","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js":"25","C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js":"26"},{"size":734,"mtime":1610061970010,"results":"27","hashOfConfig":"28"},{"size":332,"mtime":1607584769604,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":110,"mtime":1607474371854,"results":"31","hashOfConfig":"28"},{"size":808,"mtime":1607710425767,"results":"32","hashOfConfig":"28"},{"size":554,"mtime":1607491616698,"results":"33","hashOfConfig":"28"},{"size":1839,"mtime":1615328170435,"results":"34","hashOfConfig":"28"},{"size":2164,"mtime":1607826340512,"results":"35","hashOfConfig":"28"},{"size":5441,"mtime":1615327191324,"results":"36","hashOfConfig":"28"},{"size":2329,"mtime":1607916429269,"results":"37","hashOfConfig":"28"},{"size":4876,"mtime":1610514782373,"results":"38","hashOfConfig":"28"},{"size":7116,"mtime":1610088508011,"results":"39","hashOfConfig":"28"},{"size":4373,"mtime":1610044212169,"results":"40","hashOfConfig":"28"},{"size":734,"mtime":1610061970010,"results":"41","hashOfConfig":"42"},{"size":332,"mtime":1607584769604,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":110,"mtime":1607474371854,"results":"45","hashOfConfig":"42"},{"size":808,"mtime":1607710425767,"results":"46","hashOfConfig":"42"},{"size":554,"mtime":1607491616698,"results":"47","hashOfConfig":"42"},{"size":1839,"mtime":1615328170435,"results":"48","hashOfConfig":"42"},{"size":4876,"mtime":1610514782373,"results":"49","hashOfConfig":"42"},{"size":5441,"mtime":1615327191324,"results":"50","hashOfConfig":"42"},{"size":2164,"mtime":1607826340512,"results":"51","hashOfConfig":"42"},{"size":2329,"mtime":1607916429269,"results":"52","hashOfConfig":"42"},{"size":7116,"mtime":1610088508011,"results":"53","hashOfConfig":"42"},{"size":4373,"mtime":1610044212169,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1yqzitt",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"8r4xf0",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"114"},"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\index.js",[],["115","116"],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\App.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\routes.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js",["117"],"const initialState = {\r\n    username: null,\r\n    userid: null,\r\n    profilePicture: null\r\n  };\r\n\r\n const GET_USER = 'GET_USER'\r\n\r\nexport const getUser = (userid,username, profilePicture) => {\r\n    return {\r\n        type: GET_USER,\r\n        payload: {\r\n            username,\r\n            userid,\r\n            profilePicture\r\n        }\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    let {payload} = action\r\n    switch (action.type){\r\n    case GET_USER:\r\n        return {...state, payload}\r\n        default: return state\r\n    }\r\n}","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js",["118","119"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../Dashboard/Dashboard.css';\r\nimport downvote from \"../Dashboard/downvote.png\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: [],\r\n      view: '',\r\n      search: \"\",\r\n      community: '',\r\n      communities: []\r\n    };\r\n  }\r\n\r\n  resetSearch() {\r\n    this.setState({\r\n      search: \"\",\r\n      userposts: true,\r\n    });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.getViewPosts();\r\n  //   this.getAllCommunities();\r\n  // }\r\n\r\n  componentDidMount() {\r\n    if (this.state.community === ''){\r\n      this.getAllCommunities();\r\n      this.getViewPosts();\r\n    } else {\r\n      // this.getCommunityPosts(this.state.community);\r\n    }\r\n  }\r\n\r\n  getAllCommunities = () => {\r\n    axios.get(`/api/getcommunities`).then((res) => {\r\n      this.setState({\r\n        communities: res.data,\r\n      });\r\n    });\r\n  };\r\n\r\n  getCommunityPosts = (e) => {\r\n    e.preventDefault();\r\n    axios.get(`/api/posts/${e.target.value}`).then((res) => {\r\n      this.setState({\r\n        posts: res.data\r\n      });\r\n    });\r\n  };\r\n\r\n  getViewPosts = async () => {\r\n    const {view}=this.state;\r\n    let posts = [];\r\n    if (view === \"LP\"){\r\n      await axios.get(`/api/bottomposts`).then((res) => {\r\n        posts = res.data\r\n      })\r\n    } else if (view === \"MP\"){\r\n      await axios.get(`/api/topposts`).then((res) => {\r\n        posts = res.data\r\n      })\r\n    } else {\r\n      await axios.get(`/api/posts`).then((res) => {\r\n        posts = res.data\r\n      })\r\n    }\r\n    this.setState ({\r\n      posts: posts\r\n    })\r\n  }\r\n\r\n  upVote = (id,upvotes) => {\r\n    axios.put(`/api/upvote/${id}/${upvotes}`)\r\n    .then((res)=> {\r\n      console.log(res.data)\r\n      this.getViewPosts();\r\n    })\r\n  };\r\n\r\n  downVote = (id,upvotes) => {\r\n    axios.put(`/api/downvote/${id}/${upvotes}`)\r\n    .then((res)=> {\r\n      console.log(res.data)\r\n      this.getViewPosts();\r\n    })\r\n  };\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  getTopPosts = () => {\r\n    this.setState ({\r\n      view: 'MP'\r\n    }, () => {\r\n      this.getViewPosts()\r\n    })\r\n  };\r\n\r\n  getBottomPosts = () => {\r\n    this.setState ({\r\n      view: 'LP'\r\n    }, () => {\r\n      this.getViewPosts()\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { community, posts } = this.state;\r\n    let communityOptions = this.state.communities.map((e) => {\r\n      return (\r\n        <option value={e.id}> {e.name} </option>\r\n      )\r\n    })\r\n    const displayPosts = posts.map((e) => {\r\n      return (\r\n        <div className='unknowntwo' key={e.id}>\r\n\r\n          \r\n          <div className='container'>\r\n          \r\n            <div className='upvotes'>\r\n              \r\n             \r\n              <img onClick={() => this.upVote(e.id,e.upvotes)} src={downvote} alt=\"\" height=\"25\" width=\"25\" className=\"rotateimg180\" />\r\n                \r\n                <br></br>\r\n              \r\n              {e.upvotes}\r\n                \r\n                <br></br>\r\n              \r\n              <img onClick={() => this.downVote(e.id,e.upvotes)} src={downvote} alt=\"\" height=\"25\" width=\"25\" className=\"downvote\"  />\r\n             \r\n              \r\n                <br></br>\r\n            </div>\r\n\r\n\r\n\r\n            <div className='postbody'>\r\n              <div className='community'>\r\n              r/{e.name} - Posted by {e.username}\r\n              </div>\r\n                \r\n              <div className='title'>\r\n                <Link to={`/post/${e.id}`}>\r\n                  {e.title}\r\n                </Link>\r\n              </div>\r\n\r\n                <div className='image'>\r\n                <Link to={`/post/${e.id}`}>\r\n                  <img src={e.img} className='imagesize' />\r\n                </Link>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        \r\n        <br></br>\r\n\r\n\r\n        <Link to=\"/submit\">\r\n          {\" \"}\r\n          <input\r\n            placeholder=\"Create Post\"\r\n            type=\"text\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            name=\"search\"\r\n          />{\" \"}\r\n        </Link>\r\n\r\n        <Link className=\"hover\" to=\"/submit\"><button>Upload Image</button></Link>\r\n        \r\n        <Link className=\"hover\" to=\"/submit\"><button>Add Link</button></Link>\r\n\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <div className='communities'>\r\n                \r\n                SELECT COMMUNITY:  \r\n                \r\n                <select onChange={(e) => this.getCommunityPosts(e)}>\r\n                \r\n                <option selected value=\"home\">\r\n                  All\r\n                </option>\r\n\r\n                {communityOptions}\r\n                \r\n                </select>\r\n              </div>\r\n\r\n        \r\n        <button type=\"button\" onClick={() => this.getTopPosts()}> Most Popular </button>\r\n        <button type=\"button\" onClick={() => this.getBottomPosts()}> Least Popular </button>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        {displayPosts}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => state;\r\n\r\nexport default connect(mapStatetoProps)(Dashboard);\r\n","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js",["120","121","122"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport '../Post/Post.css';\r\nimport downvote from \"../Post/downvote.png\";\r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            title: '',\r\n            img: '',\r\n            content: '',\r\n            username: '',\r\n            authorPicture: '',\r\n            upvotes: 0,\r\n            post: [],\r\n            username: '',\r\n            comments: [],\r\n            body: ''\r\n        }\r\n    }\r\n\r\n      componentDidMount() {\r\n        this.getPost();\r\n        this.getComments();\r\n      }\r\n\r\n      getPost(){\r\n        let id = this.props.match.params.postid;\r\n        console.log(id);\r\n        axios\r\n          .get(`/api/post/${id}`)\r\n          .then(res => {\r\n              const post = res.data[0]\r\n            this.setState({ \r\n                img: post.img,\r\n                content: post.content,\r\n                author: post.author,\r\n                title: post.title,\r\n                upvotes: post.upvotes,\r\n                content: post.content });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      getComments() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id);\r\n        axios.get(`/api/getcomments/${id}`).then((res) => {\r\n        this.setState({\r\n          comments: res.data,\r\n        });\r\n      });\r\n    };\r\n\r\n      deleteById() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id)\r\n        axios\r\n          .delete(`/api/post/${id}`)\r\n          .then(() => {\r\n            this.props.history.push('/dashboard')\r\n          })\r\n          .catch(err => console.log(err));\r\n      };\r\n\r\n      createComment(body) {\r\n        console.log(this.state)\r\n        console.log(body);\r\n        let post_id = this.props.match.params.postid;\r\n         axios\r\n           .post(`/api/comment/`, {body, post_id})\r\n           .then(res => {\r\n             // console.log(res);\r\n             this.setState({comments: res.data});\r\n           })\r\n           .then(() => {\r\n             this.setState({\r\n               redirect: true\r\n             });\r\n           })\r\n           .catch(err => console.log(err));\r\n\r\n        }\r\n\r\n      upVote = (id,upvotes) => {\r\n        axios.put(`/api/upvote/${id}/${upvotes}`)\r\n        .then((res)=> {\r\n          console.log(res.data)\r\n          this.setState ({\r\n            posts: res.data\r\n          })\r\n        })\r\n        this.componentDidMount();\r\n      };\r\n    \r\n      downVote = (id,upvotes) => {\r\n        axios.put(`/api/downvote/${id}/${upvotes}`)\r\n        .then((res)=> {\r\n          console.log(res.data)\r\n          this.setState ({\r\n            posts: res.data\r\n          })\r\n        })\r\n        this.componentDidMount();\r\n      };\r\n\r\n      handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n      e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.postid;\r\n        const {img, content, title, upvotes, username, body} = this.state;\r\n        console.log(this.state.body)\r\n\r\n        const displayComments = this.state.comments.map((e) => {\r\n          return (\r\n            <div className='unknowntwo' key={e.id}>\r\n\r\n    \r\n              \r\n              <div className='containerthree'>\r\n\r\n              <div className='upvotesthree'>\r\n                <img src={downvote} alt=\"\" height=\"25\" width=\"25\" class=\"rotateimg180\" />\r\n\r\n                <br></br>\r\n              \r\n                 0\r\n                \r\n                <br></br>\r\n              \r\n                  <img src={downvote} alt=\"\" height=\"25\" width=\"25\" class=\"downvote\"  />\r\n\r\n              </div>\r\n    \r\n    \r\n                <div className='postbodythree'>\r\n                  <div className='communitytwo'>\r\n                  Posted by author\r\n                  </div>\r\n                    \r\n                  <div className='comment'>\r\n                      {e.body}\r\n                  </div>\r\n    \r\n                    <br></br>\r\n                    <br></br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n\r\n        \r\n        return (\r\n           <div className='dashboardtwo'> \r\n              <div className='containertwo'>\r\n                <div className='upvotestwo'>\r\n                  \r\n                  <img onClick={() => this.upVote(id, upvotes)} src={downvote} alt=\"\" height=\"25\" width=\"25\" class=\"rotateimg180\" />\r\n                  \r\n                    <br></br>\r\n              \r\n                  {upvotes}\r\n                \r\n                    <br></br>\r\n              \r\n                  <img onClick={() => this.downVote(id, upvotes)} src={downvote} alt=\"\" height=\"25\" width=\"25\" class=\"downvote\"  />\r\n             \r\n                    <br></br>\r\n                </div>\r\n                  \r\n                <div className='postbodytwo'>\r\n                    \r\n                    <div className=\"communitytwo\">\r\n                        r/Community - Posted by {username}\r\n                    </div>\r\n                    \r\n                    <div className='posttitle'>\r\n                        {title}\r\n                    </div>\r\n\r\n                    <div className='postcontent'>\r\n                        {content}\r\n                    </div>\r\n                  \r\n                    <div className='postimage'>\r\n                        <img src={img}  width=\"900\" height=\"auto\"/>\r\n                    </div>\r\n                       \r\n                      \r\n            \r\n\r\n                    <div className='options'>\r\n                          # of Comments\r\n                          <button>Share</button>\r\n                          <button>Bookmark</button>\r\n                          <button onClick={()=>{\r\n                      this.deleteById();}}>Delete</button>\r\n                          <Link to={`/edit/${id}`}><button>Edit</button></Link>\r\n                    </div>\r\n\r\n                      <br></br>\r\n\r\n                    <div className='commentheading'>\r\n                      Comment as username\r\n                    </div>\r\n\r\n                    <div className='commentinput'>\r\n                      <textarea name='body' className=\"commenttext\" placeholder=\"What are your thoughts?\" cols=\"50\" rows=\"10\" onChange={(e) => this.handleChange(e)}></textarea>\r\n                    </div>\r\n\r\n                    <div className='commentbutton'>\r\n                      <button type=\"submit\" onClick={(e)=>{\r\n                        this.createComment(body);\r\n                        this.handleSubmit(e)\r\n                        this.componentDidMount();}}>Comment</button>\r\n                    </div>\r\n                    <br></br>\r\n                    Comments\r\n                    <br></br>\r\n                    {displayComments}\r\n\r\n                </div>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\nexport default connect(mapStateToProps)(Post);","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js",["123","124"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PostEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            title: '',\r\n            img: '',\r\n            content: '',\r\n            author: '',\r\n            authorPicture: '',\r\n            upvotes: 0,\r\n            post: [],\r\n            username: ''\r\n        }\r\n    }\r\n\r\n      componentDidMount() {\r\n        this.getPost();\r\n      }\r\n\r\n      getPost () {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id);\r\n        axios\r\n          .get(`/api/post/${id}`)\r\n          .then(res => {\r\n              const post = res.data[0]\r\n            this.setState({ \r\n                img: post.img,\r\n                content: post.content,\r\n                author: post.author,\r\n                title: post.title,\r\n                upvotes: post.upvotes,\r\n                content: post.content });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      editById(title, content) {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id, title, content)\r\n        axios\r\n          .put(`/api/edit/${id}`, { title, content})\r\n          .then(res => {\r\n            console.log(res.data);\r\n            this.setState({ posts: res.data });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      deleteById() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id)\r\n        axios\r\n          .delete(`/api/post/${id}`)\r\n          .then(() => {\r\n            this.props.history.push('/dashboard')\r\n          })\r\n          .catch(err => console.log(err));\r\n          \r\n      }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e){\r\n      e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.postid\r\n        const {authorPicture, img, content, title, upvotes, username} = this.state;\r\n        return (\r\n            <div>\r\n                <Link to={`/post/${id}`}><h1>This is a test</h1></Link>\r\n\r\n                <div>\r\n                <div className=\"topPost\">\r\n                    <br></br>\r\n                    r/Community - Posted by {username}  <img src={authorPicture} alt=\"author\"/>\r\n                    <br></br>\r\n                    <br></br>\r\n                  Upvotes: {upvotes}\r\n                  <br></br>\r\n                  <button>Upvote</button>\r\n                  <button>Downvote</button>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <h1>Edit Post</h1>\r\n                  <br></br>\r\n                  <br></br>\r\n                  Title:\r\n                  <br></br>\r\n                    <input type=\"text\" placeholder=\"Title\" defaultValue={title} onChange={(e) => this.handleChange(e)} name=\"title\"/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <img src={img}/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    Text (optional):\r\n                    <br></br>\r\n                    <input type=\"text\" placeholder=\"Text (optional)\" defaultValue={content} onChange={(e) => this.handleChange(e)} name=\"content\"/>\r\n                    \r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                # of Comments\r\n                <button>Share</button>\r\n                <button>Bookmark</button>\r\n                <button onClick={()=>{\r\n            this.deleteById();}}>Delete</button>\r\n                <Link to={`/post/${id}`}><button>Cancel</button>\r\n                </Link>\r\n                \r\n                <Link to={`/post/${id}`}>\r\n                    <button onClick={() => this.editById(this.state.title, this.state.content)}>Save\r\n                    </button>\r\n                    </Link>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                Comment as username\r\n                <br></br> \r\n                <input type='text' placeholder='What are your thoughts?'></input>\r\n                <button>Comment</button>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\nexport default connect(mapStateToProps)(PostEdit);",["125","126"],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\index.js",[],["127","128"],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\App.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\routes.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js",["129"],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js",["130","131"],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js",[],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js",["132","133","134"],"C:\\Users\\Colin\\Documents\\Devmountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js",["135","136"],["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":20,"column":1,"nodeType":"145","endLine":27,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":123,"column":13,"nodeType":"148","messageId":"149","endLine":123,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":168,"column":19,"nodeType":"152","endLine":168,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":21,"column":13,"nodeType":"155","messageId":"156","endLine":21,"endColumn":21},{"ruleId":"153","severity":1,"message":"157","line":45,"column":17,"nodeType":"155","messageId":"156","endLine":45,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":200,"column":25,"nodeType":"152","endLine":200,"endColumn":68},{"ruleId":"153","severity":1,"message":"157","line":39,"column":17,"nodeType":"155","messageId":"156","endLine":39,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":105,"column":21,"nodeType":"152","endLine":105,"endColumn":37},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"143","severity":1,"message":"144","line":20,"column":1,"nodeType":"145","endLine":27,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":123,"column":13,"nodeType":"148","messageId":"149","endLine":123,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":168,"column":19,"nodeType":"152","endLine":168,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":21,"column":13,"nodeType":"155","messageId":"156","endLine":21,"endColumn":21},{"ruleId":"153","severity":1,"message":"157","line":45,"column":17,"nodeType":"155","messageId":"156","endLine":45,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":200,"column":25,"nodeType":"152","endLine":200,"endColumn":68},{"ruleId":"153","severity":1,"message":"157","line":39,"column":17,"nodeType":"155","messageId":"156","endLine":39,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":105,"column":21,"nodeType":"152","endLine":105,"endColumn":37},{"ruleId":"139","replacedBy":"162"},{"ruleId":"141","replacedBy":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'community' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'username'.","ObjectExpression","unexpected","Duplicate key 'content'.",["164"],["165"],["164"],["165"],["164"],["165"],"no-global-assign","no-unsafe-negation"]