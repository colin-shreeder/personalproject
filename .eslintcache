[{"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\index.js":"1","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\App.js":"2","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js":"3","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js":"4","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\routes.js":"5","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js":"6","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js":"7","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js":"8","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js":"9","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js":"10","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js":"11","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js":"12","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js":"13"},{"size":742,"mtime":1607669432685,"results":"14","hashOfConfig":"15"},{"size":332,"mtime":1607584769604,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":110,"mtime":1607474371854,"results":"18","hashOfConfig":"15"},{"size":808,"mtime":1607710425767,"results":"19","hashOfConfig":"15"},{"size":554,"mtime":1607491616698,"results":"20","hashOfConfig":"15"},{"size":1548,"mtime":1607826995224,"results":"21","hashOfConfig":"15"},{"size":2164,"mtime":1607826340512,"results":"22","hashOfConfig":"15"},{"size":3735,"mtime":1607725996396,"results":"23","hashOfConfig":"15"},{"size":1808,"mtime":1607726702420,"results":"24","hashOfConfig":"15"},{"size":4013,"mtime":1607664948680,"results":"25","hashOfConfig":"15"},{"size":2877,"mtime":1607711530823,"results":"26","hashOfConfig":"15"},{"size":4317,"mtime":1607715984524,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"4jv1uw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\index.js",["60"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './Redux/store';\n\nconst Router=process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter\n\nReactDOM.render(\n<Provider store={store}>\n  <HashRouter>\n    <App />\n  </HashRouter>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["61","62"],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\App.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\reportWebVitals.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\store.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\routes.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Redux\\reducer.js",["63"],"const initialState = {\r\n    username: null,\r\n    userid: null,\r\n    profilePicture: null\r\n  };\r\n\r\n const GET_USER = 'GET_USER'\r\n\r\nexport const getUser = (userid,username, profilePicture) => {\r\n    return {\r\n        type: GET_USER,\r\n        payload: {\r\n            username,\r\n            userid,\r\n            profilePicture\r\n        }\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    let {payload} = action\r\n    switch (action.type){\r\n    case GET_USER:\r\n        return {...state, payload}\r\n        default: return state\r\n    }\r\n}","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Nav\\Nav.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Auth\\Auth.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Dashboard\\Dashboard.js",["64"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: [],\r\n      search: \"\",\r\n      userposts: true,\r\n    };\r\n  }\r\n\r\n  resetSearch() {\r\n    this.setState({\r\n      search: \"\",\r\n      userposts: true,\r\n    });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllPosts();\r\n  }\r\n\r\n  getPosts = (id, search, userposts, upvotes) => {\r\n    if (this.userposts === true) {\r\n      this.getUserPosts(id, search, userposts, upvotes);\r\n    } else {\r\n      this.getAllPosts();\r\n    }\r\n  };\r\n\r\n  getAllPosts = () => {\r\n    axios.get(`/api/posts`).then((res) => {\r\n      this.setState({\r\n        posts: res.data,\r\n      });\r\n    });\r\n  };\r\n\r\n  getUserPosts(id, search, userposts) {\r\n    axios\r\n      .post(`/api/posts/${id}`, {\r\n        search: search,\r\n        userposts: userposts,\r\n      })\r\n      .then((res) => {\r\n        this.setState({ posts: res.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  toggleCheck = (e) => {\r\n    this.setState({\r\n      userposts: e.target.checked,\r\n    });\r\n  };\r\n\r\n  upVote = (id,upvotes) => {\r\n    axios.put(`/api/upvote/${id}/${upvotes}`)\r\n    .then((res)=> {\r\n      console.log(res.data)\r\n      this.setState ({\r\n        posts: res.data\r\n      })\r\n    })\r\n  };\r\n\r\n  downVote = (id,upvotes) => {\r\n    axios.put(`/api/downvote/${id}/${upvotes}`)\r\n    .then((res)=> {\r\n      console.log(res.data)\r\n      this.setState ({\r\n        posts: res.data\r\n      })\r\n    })\r\n  };\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.state;\r\n    console.log(posts);\r\n    const displayPosts = posts.map((e) => {\r\n      return (\r\n        <div key={e.id}>\r\n          <div>\r\n            {console.log(e)}\r\n            r/Community - Posted by {e.username}\r\n            <br></br>\r\n            Upvotes: {e.upvotes}\r\n            <br></br>\r\n            <button onClick={() => this.upVote(e.id,e.upvotes)}>Upvote</button>\r\n            <button onClick={() => this.downVote(e.id,e.upvotes)}>Downvote</button>\r\n            <br></br>\r\n            <Link to={`/post/${e.id}`}>\r\n              {e.title}\r\n              <br></br>\r\n              <img src={e.img} />\r\n            </Link>\r\n            <br></br>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        \r\n        <br></br>\r\n\r\n        <Link to=\"/submit\">\r\n          {\" \"}\r\n          <input\r\n            placeholder=\"Create Post\"\r\n            type=\"text\"\r\n            onChange={(e) => this.handleChange(e)}\r\n            name=\"search\"\r\n          />{\" \"}\r\n        </Link>\r\n        <Link to=\"/submit\"><button>Upload Image</button></Link>\r\n        <Link to=\"/submit\"><button>Add Link</button></Link>\r\n\r\n        <input\r\n          onClick={(e) => {\r\n            this.toggleCheck(e);\r\n            this.getPosts();\r\n          }}\r\n          type=\"checkbox\"\r\n          id=\"userposts\"\r\n          name=\"userposts\"\r\n          defaultChecked\r\n        ></input>\r\n        <label for=\"userposts\"> My Posts</label>\r\n\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <button type=\"button\"> New </button>\r\n        <button type=\"button\"> Old </button>\r\n        <button type=\"button\"> Top </button>\r\n        <button type=\"button\"> Bottom </button>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        {displayPosts}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => state;\r\n\r\nexport default connect(mapStatetoProps)(Dashboard);\r\n","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\CommunityForm\\CommunityForm.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\PostForm\\PostForm.js",[],"C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\Post.js",["65"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            title: '',\r\n            img: '',\r\n            content: '',\r\n            author: '',\r\n            authorPicture: '',\r\n            upvotes: 0,\r\n            post: [],\r\n            username: ''\r\n        }\r\n    }\r\n\r\n      componentDidMount() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id);\r\n        axios\r\n          .get(`/api/post/${id}`)\r\n          .then(res => {\r\n              const post = res.data[0]\r\n            this.setState({ \r\n                img: post.img,\r\n                content: post.content,\r\n                author: post.author,\r\n                title: post.title,\r\n                upvotes: post.upvotes\r\n             });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      deleteById() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id)\r\n        axios\r\n          .delete(`/api/post/${id}`)\r\n          .then(() => {\r\n            this.props.history.push('/dashboard')\r\n          })\r\n          .catch(err => console.log(err));\r\n          \r\n      }\r\n\r\n    render() {\r\n        let id = this.props.match.params.postid\r\n        const {authorPicture, img, content, title, upvotes, username} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"topPost\">\r\n                    <br></br>\r\n                    r/Community - Posted by {username}  <img src={authorPicture} alt=\"author\"/>\r\n                    <br></br>\r\n                    <br></br>\r\n                  Upvotes: {upvotes}\r\n                  <br></br>\r\n                  <button>Upvote</button>\r\n                  <button>Downvote</button>\r\n                  <br></br>\r\n                    <h2>{title}</h2>\r\n                    <br></br>\r\n                    <img src={img}/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    {content}\r\n                    \r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                # of Comments\r\n                <button>Share</button>\r\n                <button>Bookmark</button>\r\n                <button onClick={()=>{\r\n            this.deleteById();}}>Delete</button>\r\n                <Link to={`/edit/${id}`}><button>Edit</button></Link>\r\n                <br></br>\r\n                <br></br>\r\n                Comment as username\r\n                <br></br> \r\n                <input type='text' placeholder='What are your thoughts?'></input>\r\n                <button>Comment</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\nexport default connect(mapStateToProps)(Post);","C:\\Users\\Colin\\Documents\\DevMountain\\week8\\personalproject\\personalproject\\src\\Components\\Post\\PostEdit\\PostEdit.js",["66","67"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PostEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            title: '',\r\n            img: '',\r\n            content: '',\r\n            author: '',\r\n            authorPicture: '',\r\n            upvotes: 0,\r\n            post: [],\r\n            username: ''\r\n        }\r\n    }\r\n\r\n      componentDidMount() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id);\r\n        axios\r\n          .get(`/api/post/${id}`)\r\n          .then(res => {\r\n              const post = res.data[0]\r\n            this.setState({ \r\n                img: post.img,\r\n                content: post.content,\r\n                author: post.author,\r\n                title: post.title,\r\n                upvotes: post.upvotes,\r\n                content: post.content });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      editById(title, content) {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id, title, content)\r\n        axios\r\n          .put(`/api/edit/${id}`, { title, content})\r\n          .then(res => {\r\n            console.log(res.data);\r\n            this.setState({ posts: res.data });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      deleteById() {\r\n        let id = this.props.match.params.postid;\r\n        console.log(id)\r\n        axios\r\n          .delete(`/api/post/${id}`)\r\n          .then(() => {\r\n            this.props.history.push('/dashboard')\r\n          })\r\n          .catch(err => console.log(err));\r\n          \r\n      }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e){\r\n      e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.postid\r\n        const {authorPicture, img, content, title, upvotes, username} = this.state;\r\n        return (\r\n            <div>\r\n                <Link to={`/post/${id}`}><h1>This is a test</h1></Link>\r\n\r\n                <div>\r\n                <div className=\"topPost\">\r\n                    <br></br>\r\n                    r/Community - Posted by {username}  <img src={authorPicture} alt=\"author\"/>\r\n                    <br></br>\r\n                    <br></br>\r\n                  Upvotes: {upvotes}\r\n                  <br></br>\r\n                  <button>Upvote</button>\r\n                  <button>Downvote</button>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <h1>Edit Post</h1>\r\n                  <br></br>\r\n                  <br></br>\r\n                  Title:\r\n                  <br></br>\r\n                    <input type=\"text\" placeholder=\"Title\" defaultValue={title} onChange={(e) => this.handleChange(e)} name=\"title\"/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <img src={img}/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    Text (optional):\r\n                    <br></br>\r\n                    <input type=\"text\" placeholder=\"Text (optional)\" defaultValue={content} onChange={(e) => this.handleChange(e)} name=\"content\"/>\r\n                    \r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                # of Comments\r\n                <button>Share</button>\r\n                <button>Bookmark</button>\r\n                <button onClick={()=>{\r\n            this.deleteById();}}>Delete</button>\r\n                <Link to={`/post/${id}`}><button>Cancel</button>\r\n                </Link>\r\n                \r\n                <Link to={`/post/${id}`}>\r\n                    <button onClick={() => this.editById(this.state.title, this.state.content)}>Save\r\n                    </button>\r\n                    </Link>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                Comment as username\r\n                <br></br> \r\n                <input type='text' placeholder='What are your thoughts?'></input>\r\n                <button>Comment</button>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\nexport default connect(mapStateToProps)(PostEdit);",{"ruleId":"68","severity":1,"message":"69","line":10,"column":7,"nodeType":"70","messageId":"71","endLine":10,"endColumn":13},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":1,"nodeType":"78","endLine":27,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":109,"column":15,"nodeType":"81","endLine":109,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":69,"column":21,"nodeType":"81","endLine":69,"endColumn":37},{"ruleId":"82","severity":1,"message":"83","line":35,"column":17,"nodeType":"84","messageId":"85","endLine":35,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":101,"column":21,"nodeType":"81","endLine":101,"endColumn":37},"no-unused-vars","'Router' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]